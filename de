// based on a keyboard map from an 'xkb/symbols/de' file

default
xkb_symbols "basic" {

    include "latin(type4)"

    name[Group1]="German";

    key <AE01>  { [         1,     exclam,  onesubscript,   onesuperior ] };
    key <AE02>	{ [         2,   quotedbl,  twosubscript,    twosuperior ]	};
    key <AE03>	{ [         3,    section, threesubscript,   threesuperior ]	};
    key <AE04>	{ [         4,     dollar,   onequarter,     currency ]	};

    key <AE11> {type[Group1]="FOUR_LEVEL_PLUS_LOCK",  symbols[Group1]=
                  [ssharp, question, backslash, questiondown, 0x1001E9E ]};
// The unicode capital letter sharp s U+1E9E is transformed to "SS"
// to match the rules for capitalizing sharp s in german.
// If the capital sharp s is needed, delete the line
// starting with <U1E9C> from /usr/share/X11/locale/iso8859-15/Compose.
// If both doubled S and capital sharp s are needed, use  0x1001E9E
// for capital sharp s and some free unicode codepoint like 0x1001E9C
// for doubled S. Don`t forget to change this in the Compose file, too.

// [normal, shift, altGR, altGR+shift]

    key <AE12>	{ [dead_acute, dead_grave, dead_cedilla,  dead_ogonek ]	};

    key <AD01>  { [         q,          Q,      at,     at     ] };
    key <AD02>  { [         w,          W,      integral,   integral ] };
    key <AD03>	{ [         e,          E,     EuroSign,     Greek_epsilon ]	};
    key <AD06>	{ [         z,          Z,    leftarrow,          yen ]	};
    key <AD11>	{ [udiaeresis, Udiaeresis, dead_diaeresis, dead_abovering ] };
    key <AD12>	{ [      plus,   asterisk,   dead_tilde,  dead_macron ]	};

    key <AC02>  { [         s,          S,                U017F,     U1E9E    ] };
    key <AC07>  { [         j,          J,        dead_belowdot, dead_abovedot   ] };
    key <AC10>	{ [odiaeresis, Odiaeresis, dead_doubleacute, dead_belowdot ] };
    key <AC11>	{ [adiaeresis, Adiaeresis, dead_circumflex, dead_caron ] };
    key <TLDE>	{ [dead_circumflex, degree,	U2032,    U2033	] };

    key <BKSL>	{ [numbersign, apostrophe, rightsinglequotemark,   dead_breve ]	};
    key <AB01>	{ [         y,          Y,       guillemotright,    U203A 	] };
    key <AB02>	{ [         x,          X,        guillemotleft,    U2039 	] };
    key <AB04>	{ [         v,          V,   doublelowquotemark, singlelowquotemark ]	};
    key <AB05>	{ [         b,          B,  leftdoublequotemark, leftsinglequotemark ] };
    key <AB06>	{ [         n,          N, rightdoublequotemark, rightsinglequotemark ]	};    
    key <AB08>  { [     comma,  semicolon,       periodcentered,     multiply	] };
    key <AB09>	{ [    period,      colon,                U2026,     division 	] };
    key <AB10>	{ [     minus, underscore,               endash,     emdash	] };

    include "kpdl(comma)"

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "nodeadkeys" {

    // modify the basic German layout to not have any dead keys

    include "de(basic)"
    name[Group1]="German (eliminate dead keys)";

    key <TLDE>	{ [asciicircum,    degree,      notsign,      notsign ]	};
    key <AE12>	{ [     acute,      grave,      cedilla,      cedilla ]	};
    key <AD11>	{ [udiaeresis, Udiaeresis,    diaeresis,    diaeresis ]	};
    key <AD12>	{ [      plus,   asterisk,   asciitilde,       macron ]	};
    key <AC10>	{ [odiaeresis, Odiaeresis,  doubleacute,  doubleacute ]	};
    key <AC11>	{ [adiaeresis, Adiaeresis,  asciicircum,  asciicircum ]	};
    key <BKSL>	{ [numbersign, apostrophe,        grave,        grave ]	};
};

partial alphanumeric_keys
xkb_symbols "deadgraveacute" {
    // modify the basic German layout to have only acute and grave
    // as dead keys (tilde and circumflex are needed as spacing characters
    // in many programming languages)

    include "de(basic)"
    name[Group1]="German (dead grave acute)";

    key <TLDE>	{ [asciicircum,    degree,      notsign,      notsign ]	};
    key <AD12>	{ [      plus,   asterisk,   asciitilde,  dead_macron ]	};
    key <BKSL>	{ [numbersign, apostrophe,        grave,        grave ]	};
};

partial alphanumeric_keys
xkb_symbols "deadacute" {
    // modify the basic German layout to have only acute as
    // dead keys (ASCII grave, tilde and circumflex are needed as
    // spacing characters in many programming languages and text formatters)

    include "de(deadgraveacute)"

    name[Group1]="German (dead acute)";

    key <AE12>	{ [dead_acute,      grave, dead_cedilla,  dead_ogonek ]	};
    key <BKSL>	{ [numbersign, apostrophe,   dead_grave,   dead_grave ]	};
};

partial alphanumeric_keys
xkb_symbols "ro" {
    // add romanian-specific letters to the basic German layout.
    // Romanian symbols are accessible with combination of <AltGr> and
    // 'a', 's', 't', 'i', 'Ã¤ (&auml)' (+<Shift> for capital letters).
    // To view romanian-specific symbols, add "export LC_CTYPE=ro_RO"
    // or "export LC_CTYPE=de_DE.utf8" to your .profile.

    include "de(basic)"

    name[Group1]="Romanian (Germany)";

    key <AD05> { [         t,    T,           tcedilla,     Tcedilla    ] };
    key <AD08> { [         i,    I,        icircumflex,  Icircumflex    ] };
    key <AC01> { [         a,    A,        acircumflex,  Acircumflex    ] };
    key <AC02> { [         s,    S,           scedilla,     Scedilla    ] };
    key <AC11> { [ adiaeresis,   Adiaeresis,    abreve,       Abreve    ] };
};

partial alphanumeric_keys
xkb_symbols "ro_nodeadkeys" {
    // add romanian-specific letters to the German nodeadkeys layout.
    // Read the comment for de_ro !

    include "de(nodeadkeys)"
    name[Group1]="Romanian (Germany, eliminate dead keys)";

    key <AD05> { [         t,    T,           tcedilla,     Tcedilla    ] };
    key <AD08> { [         i,    I,        icircumflex,  Icircumflex    ] };
    key <AC01> { [         a,    A,        acircumflex,  Acircumflex    ] };
    key <AC02> { [         s,    S,           scedilla,     Scedilla    ] };
    key <AC11> { [ adiaeresis,   Adiaeresis, abreve,       Abreve       ] };
};

// German Dvorak keymap by Thorsten Staerk (www.staerk.de/thorsten)
// Have acute and grave as dead keys, tilde and circumflex alive as they are needed 
// in many programming languages.
// to use this keymap, use a 105-key-keyboard and the command setxkbmap -model pc105 -layout dvorak -variant de
// source: http://www-lehre.informatik.uni-osnabrueck.de/~rfreund/dvorak.php
partial alphanumeric_keys 
xkb_symbols "dvorak" {
    include "us(dvorak)"

    name[Group1]="German (Dvorak)";

    key <TLDE> { [ asciicircum, degree ] };

    key <AE01> { [ 1, exclam, onesuperior ] };
    key <AE02> { [ 2, quotedbl, twosuperior ] };
    key <AE03> { [ 3, section, threesuperior ] };
    key <AE04> { [ 4, dollar, bar ] };
    key <AE05> { [ 5, percent, bar ] };
    key <AE06> { [ 6, ampersand, brokenbar ] };
    key <AE07> { [ 7, slash, braceleft ] };
    key <AE08> { [ 8, parenleft, bracketleft ] };
    key <AE09> { [ 9, parenright, bracketright ] };
    key <AE10> { [ 0, equal, braceright ] };
    key <AE11> { [ plus, asterisk, asciitilde ] };
    key <AE12> { [ less, greater, dead_grave ] };

    key <AD01> { [ udiaeresis, Udiaeresis, at ] };
    key <AD02> { [ comma, semicolon, dead_diaeresis ] };
    key <AD03> { [ period, colon ] };
    key <AD08> { [ c, C, copyright, Cacute ] };
    key <AD09> { [ t, T, trademark ] };
    key <AD10> { [ z, Z, zabovedot, Zabovedot ] };
    key <AD11> { [ question, ssharp ] };
    key <AD12> { [ slash, backslash, dead_acute ] };

    key <AC01> { [ a, A, at, aogonek ] };
    key <AC02> { [ o, O, oacute, Oacute ] };
    key <AC03> { [ e, E, EuroSign, eogonek ] };
    key <AC04> { [ i, I ] };
    key <AC05> { [ u, U ] };
    key <AC06> { [ h, H ] };
    key <AC07> { [ d, D ] };
    key <AC08> { [ r, R, registered ] };
    key <AC09> { [ n, N, nacute, Nacute ] };
    key <AC10> { [ s, S, sacute, Sacute] };
    key <AC11> { [ l, L, lstroke, Lstroke ] };

    key <AB01> { [ odiaeresis, Odiaeresis ] };
    key <AB02> { [ q, Q, at ] };
    key <AB07> { [ m, M, mu ] };
    key <AB10> { [ numbersign, apostrophe ] };

    key <BKSL> { [ minus, underscore, hyphen, diaeresis] };

    key <LSGT> { [ adiaeresis, Adiaeresis, bar ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "Sundeadkeys" {

    // For naming consistency

    include "de(basic)"

};

partial alphanumeric_keys
xkb_symbols "sundeadkeys" {

    // For naming consistency

    include "de(Sundeadkeys)"

    name[Group1]="German (Sun dead keys)";
};


// German Neo-Layout Version 2
// adopted 2004 by Hanno Behrens <Hanno.Behrens@gmx.de>
// inspired by Dvorak/de-ergo  http://www.goebel-consult.de/de-ergo/
//
// Authors: 
//      Stephan Hilb <stephan at ehilb dot de>
//      <lucky at zankt dot net>
//      Benjamin Kellermann <Benjamin dot Kellermann at gmx dot Germany>
//      Erik Streb <mail at erikstreb dot de>
//        and many other contributors
//
//      http://www.neo-layout.org
//
// $Revision$, $Date$

partial alphanumeric_keys modifier_keys keypad_keys
xkb_symbols "neo_base" {


    // Levels in Neo jargon
    // --------------------------------------------------------------
    // Ebene 1: normal
    // Ebene 2: Shift
    // Ebene 3: Mod3
    // Ebene 4: Mod4 (for marking something use Shift + Mod4)
    // Ebene 5: Shift + Mod3
    // Ebene 6: Mod3 + Mod4
    // Compose (not a level): Mod3 + Tab
    // Feststelltaste (Capslock): Shift + Shift
    // Mod4-Lock: Mod4 + Mod4
    // Mod4-Lock: Shift + Mod3 + Tab

    // Legend
    // ===============
    // Levels in Xkbmap jargon to be found here in the definitions. 
    // These are the levels used, and Xorg's translations:
    // --------------------------------------------------------------
    // Xorg:       Level1                   Level2                   Level3                   Level4                   Level5                   Level6                   Level7                   Level8                   
    // Neo:        Ebene1                   Ebene2                   Ebene3                   Ebene5                   Ebene4                   Pseudo-Ebene             Ebene6                   ???                      
    // Keys (Neo): None                     Shift                    Mod3                     Mod3 + Shift             Mod4                     Mod4 + Shift             Mod3 + Mod4              Mod3 + Mod4 + Shift      


    // Alphanumeric-keys
    // ===============
    key.type[Group1] = "EIGHT_LEVEL";

    // Tab as Multi_key (Compose)
    // --------------------------------------------------------------
    key  <TAB> { [ Tab,                     ISO_Left_Tab,            Multi_key,               ISO_Level5_Lock,         NoSymbol,                NoSymbol,                NoSymbol,                ISO_Level5_Lock          ] };


    // Number row
    // --------------------------------------------------------------
    key <TLDE> { [ asciicircum,             degree,                  zerosubscript,           zerosuperior,            U2103,                   zerosuperior,            U2103,                   NoSymbol                 ] };

    key <AE01> { [ 1,                       exclam,                  onesubscript,            onesuperior,             doublelowquotemark,      singlelowquotemark,      notsign,                 U2032                 ] };
    key <AE02> { [ 2,                       quotedbl,                twosubscript,            twosuperior,             leftdoublequotemark,     rightsinglequotemark,    onehalf,                 U2033                 ] };
    key <AE03> { [ 3,                       apostrophe,              threesubscript,          threesuperior,           rightdoublequotemark,    leftsinglequotemark,     threequarters,           U2034                 ] };
    key <AE04> { [ 4,                       dollar,                  U2084,                   U2074,                   EuroSign,                yen,                     onequarter,              NoSymbol                 ] };
    key <AE05> { [ 5,                       percent,                 U2085,                   U2075,                   sterling,                RupeeSign,               NoSymbol,                U2030                  ] };
    key <AE06> { [ 6,                       ampersand,               U2086,                   U2076,                   NoSymbol,                NoSymbol,                femalesymbol,            malesymbol               ] };

    key <AE07> { [ 7,                       slash,                   U2087,                   U2077,                   braceleft,               U2045,                   U00F7,                   NoSymbol                 ] };
    key <AE08> { [ 8,                       parenleft,               U2088,                   U2078,                   bracketleft,             U27E8,                   U230A,                   U2308                 ] };
    key <AE09> { [ 9,                       parenright,              U2089,                   U2079,                   bracketright,            U27E9,                   U230B,                   U2309                 ] };
    key <AE10> { [ 0,                       equal,                   notequal,                approxeq,                braceright,              U2046,                   identical,               emptyset                 ] };

    key <AE11> { [ ssharp,                  question,                U207A,                   U207B,                   backslash,               U1E9E,                   hyphen,                  NoSymbol                 ] };
    key <AE12> { [ dead_acute,              dead_grave,              dead_cedilla,            dead_abovering,          dead_macron,             dead_diaeresis,         dead_dasia,               dead_belowdot            ] };

    // Top row
    // --------------------------------------------------------------
    key.type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC";
    key <AD01> { [ q,                       Q,                       U211A,                   U2300,                   at,                      NoSymbol,                NoSymbol,                NoSymbol                 ] };
    key <AD02> { [ w,                       W,                       squareroot,              cuberoot,                NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol                 ] };
    key <AD03> { [ e,                       E,                       U2208,                   U2209,                   Greek_epsilon,           EuroSign,                U2286,                   U228A                 ] };
    key <AD04> { [ r,                       R,                       U211D,                   NoSymbol,                Greek_rho,               U03F1,                   U2102,                   U211C                 ] };
    key <AD05> { [ t,                       T,                       U22A4,                   U22A5,                   Greek_tau,               Greek_TAU,               NoSymbol,                trademark                ] };

    key <AD06> { [ z,                       Z,                       U2124,                   U2124,                   Greek_zeta,              NoSymbol,                NoSymbol,                U2128                 ] };
    key <AD07> { [ u,                       U,                       U221E,                   U27E9,                   Greek_theta,             Greek_THETA,             NoSymbol,                U03D1                 ] };
    key <AD08> { [ i,                       I,                       integral,                dintegral,               U2139,                   NoSymbol,                U222D,                   U2111                 ] };
    key <AD09> { [ o,                       O,                       U222E,                   U222F,                   Greek_omega,             Greek_OMEGA,             U2230,                   NoSymbol                 ] };
    key <AD10> { [ p,                       P,                       U220F,                   variation,               Greek_pi,                Greek_PI,                NoSymbol,                NoSymbol                 ] };

    key <AD11> { [ udiaeresis,              Udiaeresis,              variation,               Greek_finalsmallsigma,   apostrophe,              U25AA,                   NoSymbol,                NoSymbol                 ] };

    key.type[Group1] = "EIGHT_LEVEL";
    key <AD12> { [ plus,                    asterisk,               U22C5,                    plusminus,               asciitilde,              NoSymbol,                dead_breve,              NoSymbol                 ] };

    // Middle row
    // --------------------------------------------------------------
    key.type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC";
    key <AC01> { [ a,                       A,                       U2221,                   U2222,                   Greek_alpha,             Greek_ALPHA,             NoSymbol,                U212B                 ] };
    key <AC02> { [ s,                       S,                       U2211,                   NoSymbol,                Greek_sigma,             Greek_SIGMA,             integral,                U017F                    ] };
    key <AC03> { [ d,                       D,                       partialderivative,       nabla,                   Greek_delta,             Greek_DELTA,             U2300,                  NoSymbol                 ] };
    key <AC04> { [ f,                       F,                       function,                U2131,                   Greek_phi,               Greek_PHI,               U2109,                   U03D5                    ] };
    key <AC05> { [ g,                       G,                       notsign,                 U2201,                   Greek_gamma,             Greek_GAMMA,             NoSymbol,                NoSymbol                 ] };
    key <AC06> { [ h,                       H,                       logicaland,              intersection,            Greek_eta,               Greek_ETA,               U266E,                   U210F                    ] };
    key <AC07> { [ j,                       J,                       logicalor,               union,                   NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol                 ] };
    key <AC08> { [ k,                       K,                       U2295,                   U2296,                   Greek_kappa,             NoSymbol,                U2297,                   U2299                    ] };
    key <AC09> { [ l,                       L,                       U22B6,                   U2112,                   Greek_lambda,            Greek_LAMBDA,            NoSymbol,                U2113                 ] };
    key <AC10> { [ odiaeresis,              Odiaeresis,              U2194,                   U21D4,                   section,                 U2020,                   U21B6,                   U21B7                    ] };
    key <AC11> { [ adiaeresis,              Adiaeresis,              rightarrow,              U21D2,                   numbersign,              U2021,                   U21A6,                   NoSymbol                 ] };
    key <BKSL> { [ numbersign,              apostrophe,              at,                      Greek_upsilon,           rightdoublequotemark,    leftsinglequotemark,     nabla,                   NoSymbol                 ] };



    // Bottom row
    // --------------------------------------------------------------
    key <AB01> { [ y,                       Y,                       greaterthanequal,        U226B,                   Greek_psi,               Greek_PSI,               U2714,                   U2611                    ] };
    key <AB02> { [ x,                       X,                       multiply,                U03F5,                   Greek_xi,                Greek_XI,                U2718,                   U2612                 ] };
    key <AB03> { [ c,                       C,                       U2102,                   U2201,                   Greek_chi,               Greek_CHI,               U2103,                   copyright                ] };
    key <AB04> { [ v,                       V,                       U2200,                   U20D7,                   NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol                 ] };
    key <AB05> { [ b,                       B,                       U2203,                   U2204,                   Greek_beta,              NoSymbol,                U266D,                   NoSymbol                 ] };
    key <AB06> { [ n,                       N,                       U2115,                   nabla,                   Greek_nu,                NoSymbol,                U266F,                   U2135                    ] };
    key <AB07> { [ m,                       M,                       U22A8,                   U22AD,                   Greek_mu,                NoSymbol,                NoSymbol,                NoSymbol                 ] };
    key.type[Group1] = "EIGHT_LEVEL";
    key <AB08> { [ comma,                   semicolon,               U22A2,                   U22AC,                   U2022,                   U2023,                   NoSymbol,                NoSymbol                 ] };
    key <AB09> { [ period,                  colon,                   U22C5,                   U2215,                   ellipsis,                periodcentered,          NoSymbol,                NoSymbol                 ] };
    key.type[Group1] = "EIGHT_LEVEL_SEMIALPHABETIC";
    key <AB10> { [ minus,                   underscore,              U2212,                   U2213,                   endash,                  emdash,                  hyphen,                  U2015                    ] };
    key.type[Group1] = "EIGHT_LEVEL";

    // Space key
    // --------------------------------------------------------------
    key <SPCE> { [ space,                   U2002,                   space,                   nobreakspace,            U2006,                    U200A,                    U202F,                   NoSymbol                 ] };


    // Keypad-keys
    // ===============

    // The former Numlock key:
    key <NMLK> { [ Tab,                     ISO_Left_Tab,            equal,                   approxeq,                notequal,                Pointer_EnableKeys,      identical,               NoSymbol                 ] };

    // Topmost row
    // --------------------------------------------------------------
    key <KPDV> { [ KP_Divide,               KP_Divide,               division,                U2300,                   U2215,                   NoSymbol,                U2223,                   NoSymbol                 ] };
    key <KPMU> { [ KP_Multiply,             KP_Multiply,             U2219,                   U2299,                   multiply,                NoSymbol,                U2297,                   NoSymbol                 ] };
    key <KPSU> { [ KP_Subtract,             KP_Subtract,             U2212,                   U2296,                   U2216,                   NoSymbol,                U2238,                   NoSymbol                 ] };

    // Top row
    // --------------------------------------------------------------
    key  <KP7> { [ KP_7,                    U26A0,                   U2195,                   U21D5,                   KP_Home,                 KP_Home,                 U250C,                   NoSymbol                 ] };
    key  <KP8> { [ KP_8,                    U26A1,                   uparrow,                 U21D1,                   KP_Up,                   KP_Up,                   U252C,                   NoSymbol                 ] };
    key  <KP9> { [ KP_9,                    U2691,                   U20D7,                   U226B,                   KP_Prior,                KP_Prior,                U2510,                   NoSymbol                 ] };
    key <KPAD> { [ KP_Add,                  KP_Add,                  plusminus,               U2295,                   U2213,                   NoSymbol,                U2502,                   NoSymbol                 ] };

    // Middle row
    // --------------------------------------------------------------
    key  <KP4> { [ KP_4,                    U262E,                   leftarrow,               U21D0,                   KP_Left,                 KP_Left,                 U251C,                   NoSymbol                 ] };
    key  <KP5> { [ KP_5,                    U267B,                   U2605,                   U22B6,                   KP_Begin,                KP_Begin,                U253C,                   NoSymbol                 ] };
    key  <KP6> { [ KP_6,                    U2622,                   rightarrow,              U21D2,                   KP_Right,                KP_Right,                U2524,                   NoSymbol                 ] };

    // Bottom row
    // --------------------------------------------------------------
    key  <KP1> { [ KP_1,                    U2639,                   U2194,                   U21D4,                   KP_End,                  KP_End,                  U2514,                   NoSymbol                 ] };
    key  <KP2> { [ KP_2,                    U263A,                   downarrow,               U21D3,                   KP_Down,                 KP_Down,                 U2534,                   NoSymbol                 ] };
    key  <KP3> { [ KP_3,                    heart,                   U21CC,                   U21CB,                   KP_Next,                 KP_Next,                 U2518,                   NoSymbol                 ] };
    key <KPEN> { [ KP_Enter,                KP_Enter,                KP_Enter,                KP_Enter,                KP_Enter,                KP_Enter,                KP_Enter,                NoSymbol                 ] };
    key <KPEQ> { [ KP_Equal,                NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol,                NoSymbol                 ] };

    // Bottommost row
    // --------------------------------------------------------------
    key  <KP0> { [ KP_0,                    U2423,                   percent,                 U2030,                   KP_Insert,               KP_Insert,               U2500,                   NoSymbol                 ] };
    key <KPDL> { [ KP_Separator,            period,                  comma,                   minutes,                 KP_Delete,               KP_Delete,               seconds,                 NoSymbol                 ] };
};

partial alphanumeric_keys modifier_keys keypad_keys
xkb_symbols "neo" {

    include "de(neo_base)"

    name[Group1]= "German (Neo 2)";

    include "shift(both_capslock)"
    include "level3(caps_switch)"
    include "level3(bksl_switch)"
    include "level5(lsgt_switch)"
    include "level5(ralt_switch)"

    key.type[Group1] = "EIGHT_LEVEL";
    key <LSGT> { [ less,                    greater,                 lessthanequal,              U226A,                bar,                     U2016,                   brokenbar,                  U2610                 ] };

};

// Copied from macintosh_vndr/de
// olh@suse.de   very close to MacOS map

partial alphanumeric_keys 
xkb_symbols "mac" {

    include "de"
    name[Group1]= "German (Macintosh)";

    // Alphanumeric section
    key <AE01>	{ [         1,     exclam,   exclamdown,           at ]	};
    key <AE05>	{ [         5,    percent,  bracketleft       ]	};
    key <AE06>	{ [         6,  ampersand, bracketright       ]	};
    key <AE07>	{ [         7,      slash,          bar,    backslash ]	};
    key <AE08>	{ [         8,  parenleft,    braceleft,   asciitilde ]	};
    key <AE09>	{ [         9, parenright,   braceright       ]	};
    key <AD01>	{ [         q,          Q, guillemotleft, guillemotright ]	};
    key <AD04>	{ [         r,          R,   registered       ]	};
    key <AD07>	{ [         u,          U,    diaeresis,       Aacute ]	};
    key <AD08>	{ [         i,          I,        slash,  Ucircumflex ]	};
    key <AD11>	{ [ udiaeresis, Udiaeresis, periodcentered,    degree ]	};
    key <AD12>	{ [      plus,   asterisk,   asciitilde       ]	}; 
    key <AC01>	{ [         a,          A,        aring,        Aring ]	};
    key <AC05>	{ [         g,          G,    copyright       ]	};
    key <AC06>	{ [         h,          H,  ordfeminine       ]	};
    key <AC09>	{ [         l,          L,           at       ]	};
    key <AC10>	{ [ odiaeresis, Odiaeresis,  dead_acute       ]	};
    key <AB06>	{ [         n,          N,   asciitilde       ]	};

};

partial alphanumeric_keys 
xkb_symbols "mac_nodeadkeys" {
    // modify the standard German mac layout to not have any dead keys
    include "de(mac)"
    name[Group1]= "German (Macintosh, eliminate dead keys)";
    key <AE04>	{ [         4,     dollar,   onequarter,     currency ]	};

    key <TLDE>	{ [ asciicircum,    degree,     notsign       ]	};
    key <AE12>	{ [      acute,      grave,     cedilla       ]	};
    key <AD11>	{ [ udiaeresis, Udiaeresis,   diaeresis       ]	};
    key <AD12>	{ [       plus,   asterisk,  asciitilde,       macron ]	};
    key <AC10>	{ [ odiaeresis, Odiaeresis,       acute       ]	};
    key <AC11>	{ [ adiaeresis, Adiaeresis, asciicircum       ]	};

    key <BKSL>	{ [ numbersign, apostrophe,       grave       ]	};
};

partial alphanumeric_keys
xkb_symbols "dsb"
{
	name[Group1] = "Lower Sorbian";
	include "latin(basic)"
	include "level3(ralt_switch)"
	include "kpdl(comma)"
	key <AB01> { [              z,              Z,         zcaron,         Zcaron ] };
	key <AB02> { [              x,              X,         zacute,         Zacute ] };
	key <AB03> { [              c,              C,         cacute,         Cacute ] };
	key <AB04> { [              v,              V,         ccaron,         Ccaron ] };
	key <AB06> { [              n,              N,         nacute,         Nacute ] };
	key <AC02> { [              s,              S,         sacute,         Sacute ] };
	key <AC03> { [              d,              D,         scaron,         Scaron ] };
	key <AC04> { [              f,              F                                 ] };
	key <AD01> { [              q,              Q                                 ] };
	key <AD02> { [              w,              W                                 ] };
	key <AD03> { [              e,              E,         ecaron,         Ecaron ] };
	key <AD04> { [              r,              R,         racute,         Racute ] };
	key <AD05> { [              t,              T,          U20B5,       EuroSign ] };
	key <AD09> { [              o,              O,         oacute,         Oacute ] };
};

partial alphanumeric_keys
xkb_symbols "dsb_qwertz"
{
	name[Group1] = "Lower Sorbian (qwertz)";
	include "latin(basic)"
	include "level3(ralt_switch)"
	include "kpdl(comma)"
	key <AB01> { [              y,              Y                                 ] };
	key <AB02> { [              x,              X                                 ] };
	key <AB03> { [              c,              C,         cacute,         Cacute ] };
	key <AB04> { [              v,              V,         ccaron,         Ccaron ] };
	key <AB06> { [              n,              N,         nacute,         Nacute ] };
	key <AC02> { [              s,              S,         sacute,         Sacute ] };
	key <AC03> { [              d,              D,         scaron,         Scaron ] };
	key <AC04> { [              f,              F                                 ] };
	key <AD01> { [              q,              Q                                 ] };
	key <AD02> { [              w,              W                                 ] };
	key <AD03> { [              e,              E,         ecaron,         Ecaron ] };
	key <AD04> { [              r,              R,         racute,         Racute ] };
	key <AD05> { [              t,              T,          U20B5,       EuroSign ] };
	key <AD06> { [              z,              Z,         zcaron,         Zcaron ] };
	key <AD07> { [              u,              U,         zacute,         Zacute ] };
	key <AD09> { [              o,              O,         oacute,         Oacute ] };
};

// layout for Russian letters on an german keyboard
// based on US-RU layout by Ivan Popov <pin@konvalo.org> 2005-07-17
// adopted for german layout by Alexey Fisher <bug-track@fisher-privat.net> 2010-08-19

partial alphanumeric_keys
xkb_symbols "ru" {

    include "de(basic)"
 
    name[Group1]= "Russian (Germany, phonetic)";

key.type[group1]="FOUR_LEVEL_ALPHABETIC";

    key <LatA> { [        Cyrillic_a,        Cyrillic_A ] };
    key <LatB> { [       Cyrillic_be,       Cyrillic_BE ] };
    key <LatW> { [       Cyrillic_ve,       Cyrillic_VE ] };
    key <LatG> { [      Cyrillic_ghe,      Cyrillic_GHE ] };
    key <LatD> { [       Cyrillic_de,       Cyrillic_DE ] };
    key <LatE> { [       Cyrillic_ie,       Cyrillic_IE ] };
    key <TLDE> { [       Cyrillic_io,       Cyrillic_IO, asciitilde ] };
    key <LatX> { [      Cyrillic_zhe,      Cyrillic_ZHE ] };
    key <LatZ> { [       Cyrillic_ze,       Cyrillic_ZE ] };
    key <LatI> { [        Cyrillic_i,        Cyrillic_I ] };
    key <LatJ> { [   Cyrillic_shorti,   Cyrillic_SHORTI ] };
    key <LatK> { [       Cyrillic_ka,       Cyrillic_KA ] };
    key <LatL> { [       Cyrillic_el,       Cyrillic_EL ] };
    key <LatM> { [       Cyrillic_em,       Cyrillic_EM ] };
    key <LatN> { [       Cyrillic_en,       Cyrillic_EN ] };
    key <LatO> { [        Cyrillic_o,        Cyrillic_O ] };
    key <LatP> { [       Cyrillic_pe,       Cyrillic_PE ] };
    key <LatR> { [       Cyrillic_er,       Cyrillic_ER ] };
    key <LatS> { [       Cyrillic_es,       Cyrillic_ES ] };
    key <LatT> { [       Cyrillic_te,       Cyrillic_TE ] };
    key <LatU> { [        Cyrillic_u,        Cyrillic_U ] };
    key <LatF> { [       Cyrillic_ef,       Cyrillic_EF ] };
    key <LatH> { [       Cyrillic_ha,       Cyrillic_HA ] };
    key <LatC> { [      Cyrillic_tse,      Cyrillic_TSE ] };
    key <AC10> { [      Cyrillic_che,      Cyrillic_CHE ] };
    key <AD11> { [      Cyrillic_sha,      Cyrillic_SHA ] };
    key <AD12> { [    Cyrillic_shcha,    Cyrillic_SHCHA, plus, asterisk ] };
    key <AE12> { [ Cyrillic_hardsign, Cyrillic_HARDSIGN ] };
    key <LatY> { [     Cyrillic_yeru,     Cyrillic_YERU ] };
    key <LatV> { [ Cyrillic_softsign, Cyrillic_SOFTSIGN ] };
    key <AC11> { [        Cyrillic_e,        Cyrillic_E ] };
    key <BKSL> { [       Cyrillic_yu,       Cyrillic_YU, numbersign, apostrophe ] };
    key <LatQ> { [       Cyrillic_ya,       Cyrillic_YA ] };

    include "level3(ralt_switch)"
};


partial alphanumeric_keys
xkb_symbols "htcdream" {
        include "inet(htcdream)"

        name[Group1]= "German";

        //second row
        key <AD01> { [ q, Q, Tab, Tab ] };
        key <AD02> { [ w, W, grave, grave ] };
        key <AD03> { [ e, E, EuroSign, EuroSign ] };
        key <AD04> { [ r, R, underscore, underscore ] };
        key <AD05> { [ t, T, sterling, sterling] };
        key <AD06> { [ z, Z, division, division ] };
        key <AD07> { [ u, U, udiaeresis, udiaeresis ] };
        key <AD08> { [ i, I, minus, minus ] };
        key <AD09> { [ o, O, odiaeresis, odiaeresis ] };
        key <AD10> { [ p, P, equal, equal ] };

        //third row
        key <AC01> { [ a, A, adiaeresis, adiaeresis ] };
        key <AC02> { [ s, S, ssharp, ssharp] };
        key <AC03> { [ d ,D, backslash, backslash ] };
        key <AC04> { [ f, F, braceleft, braceleft ] };
        key <AC05> { [ g, G, braceright, braceright ] };
        key <AC06> { [ h, H, multiply, multiply ] };
        key <AC07> { [ j, J, colon, colon ] };
        key <AC08> { [ k, K, plus, plus ] };
        key <AC09> { [ l, L, apostrophe, apostrophe ] };

        //forth row
        key <AB01> { [ y, Y, bar, bar ] };
        key <AB02> { [ x, X, bracketleft, bracketleft ] };
        key <AB03> { [ c, C, bracketright, bracketright ] };
        key <AB04> { [ v, V, less, less ] };
        key <AB05> { [ b, B, greater, greater ] };
        key <AB06> { [ n, N, semicolon, semicolon ] };
        key <AB07> { [ m, M, quotedbl, quotedbl ] };
        key <AB08> { [ comma, comma, question, question ] };

        //fifth row
        key <FK15> { [ at, at, asciitilde, asciitilde ] };

        include "level3(alt_switch)"
};

// EXTRAS:

partial alphanumeric_keys
xkb_symbols "us" {
    include "us"

    name[Group1]="German (US keyboard with German letters)";

    key <AC01> { [           a,          A, adiaeresis, Adiaeresis ] };
    key <AC02> { [           s,          S,     ssharp,     ssharp ] };
    key <AC10> { [   semicolon,      colon, odiaeresis, Odiaeresis ] };
    key <AC11> { [  apostrophe,   quotedbl, adiaeresis, Adiaeresis ] };
    key <AD03> { [           e,          E,   EuroSign,   EuroSign ] };
    key <AD07> { [           u,          U, udiaeresis, Udiaeresis ] };
    key <AD09> { [           o,          O, odiaeresis, Odiaeresis ] };
    key <AD11> { [ bracketleft,  braceleft, udiaeresis, Udiaeresis ] };
    key <AE03> { [           3, numbersign,    section,    section ] };
    key <AE11> { [       minus, underscore,     ssharp,   question ] };

    include "level3(ralt_switch)"
};

partial alphanumeric_keys
xkb_symbols "hu" {

    // modify the basic German layout to not have any dead keys and add Hungarian letters

    include "de(basic)"
    name[Group1]="German (with Hungarian letters and no dead keys)";

    key <AB01> { [         y,          Y, guillemotleft,        less ] };
    key <AC10> { [odiaeresis, Odiaeresis,        eacute,      Eacute ] };
    key <AC11> { [adiaeresis, Adiaeresis,        aacute,       Aacute] };
    key <AD03> { [         e,          E,      EuroSign,    EuroSign ] };
    key <AD06> { [         z,          Z,     leftarrow,         yen ] };
    key <AD07> { [         u,          U,        uacute,      Uacute ] };
    key <AD08> { [         i,          I,        iacute,      Iacute ] };
    key <AD09> { [         o,          O,  odoubleacute,Odoubleacute ] };
    key <AD11> { [udiaeresis, Udiaeresis,  udoubleacute,Udoubleacute ] };
    key <AD12> { [      plus,   asterisk,    asciitilde,      macron ] };
    key <AE12> { [     acute,      grave,        oacute,      Oacute ] };
    key <BKSL> { [numbersign, apostrophe,         grave,       grave ] };
    key <TLDE> { [asciicircum,    degree,       notsign,     notsign ] };
    
    
};
